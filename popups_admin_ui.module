<?php
// $Id$

/**
 * Implementation of hook_init().
 *
 * Enable popup behavior with admin menu.
 */
function popups_admin_ui_init() {
  if (user_access('admin menu')) {
    popups_add_popups();
    drupal_add_css(drupal_get_path('module', 'popups_admin_ui') . '/popups_admin_ui.css');
  }
}

/**
 * Implementation of hook_admin_link_alter().
 *
 * To improve inline menu for some nodes types.
 */
function popups_admin_ui_admin_link_alter(&$links,$type, $object) {
  if ($type == 'node') {
    // Inline menu for panel node types
    if ($object->type == 'panel') {
      unset($links['node-edit'], $links['node-delete']);
      if (node_access('update', $object)) {
        $links['node-view'] = array(
          'title' => t('View'),
          'href' => "node/{$object->nid}",
          'attributes' => array('class' => 'view'),
        );
        $links['node-edit'] = array(
          'title' => t('Configure'),
          'href' => "node/{$object->nid}/edit",
          'attributes' => array('class' => 'icon-configure popups-form-reload'),
          'query' => array('destination' => "node/{$object->nid}"),
        );
        $links['node-layout'] = array(
          'title' => t('Layout'),
          'href' => "node/{$object->nid}/panel_layout",
          'attributes' => array('class' => 'icon-configure popups-form-reload'),
          'query' => array('destination' => "node/{$object->nid}"),
        );
        $links['node-content'] = array(
          'title' => t('Content'),
          'href' => "node/{$object->nid}/panel_content",
          'attributes' => array('class' => 'icon-edit'),
          'query' => array('destination' => $_GET['q']),
        );
      }
      if (node_access('delete', $object)) {
        $links['node-delete'] = array(
          'title' => t('Delete'),
          'href' => "node/{$object->nid}/delete",
          'attributes' => array('class' => 'icon-delete'),
          'query' => array('destination' => $_GET['q']),
        );
      }
    }
  }

  return $links;
}

function popups_admin_ui_preprocess_page(&$vars) {
  if (isset($vars['node']) && $vars['node']->type == 'panel' && $vars['node']->body == '') // add only to editing page (body == '')
    $vars['content'] =  '<div class="node">' . $vars['content'] . theme('admin_links', admin_get_links('node', $vars['node'])) . '</div>';
}

/**
 * Implementation of hook_popups().
 */
function popups_admin_ui_popups() {

  return array(
    'node/add/panel/choose-layout' => array(
      'div.layout-link a' => array(
        'updateMethod' => 'reload',
        'updateSource' => 'final',
      )
    )
  );
}

/**
 * Implementation of hook_form_alter().
 */
function popups_admin_ui_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'panel_node_form') {
    $form['buttons']['submit']['#submit'][] = 'popups_admin_ui_form_submit';
  }
}

/**
* Custom submit handler. Overwrites the form redirection variable.
*/
function popups_admin_ui_form_submit($form, &$form_state) {
  $form_state['redirect'] = array(
    'node/'.$form_state['nid'],
    'destination=node/'.$form_state['nid']
  );
}
